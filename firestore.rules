rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Common function to check if the request is just reading
    function isRead() {
      return request.method == 'get' || request.method == 'list';
    }

    // Allow read access to all menu and ordering related collections
    match /{collection}/{document=**} {
      allow read: if isRead() 
        && (collection in ['stores', 'categories', 'menuItems', 'combos', 'toppings', 'sauces', 'sizes']);
      
      // Only allow writes with authentication
      allow write: if request.auth != null;
    }

    // Allow public access to customers collection for online ordering
    match /customers/{customerId} {
      // Anyone can create a customer (for online ordering)
      allow create: if true;
      
      // Anyone can read customers (for customer lookup)
      allow read: if true;
      
      // Anyone can update customers (for updating address, etc.)
      allow update: if true;
      
      // Only authenticated users can delete customers
      allow delete: if request.auth != null;
    }

    // Allow access to counters collection for order numbers
    match /counters/{counterId} {
      allow read, write: if true;
    }

    // Allow public access to create orders
    match /orders/{orderId} {
      // Anyone can create an order
      allow create: if true;
      
      // Only the customer who created the order can read it
      allow read: if request.auth != null || 
        (resource.data.customerPhone == request.resource.data.customerPhone);
        
      // Only authenticated users can update/delete orders
      allow update, delete: if request.auth != null;
    }

    // All other collections require authentication
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
